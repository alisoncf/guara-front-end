{
  "components": {
    "schemas": {
      "ArquivoCombinadoInfo": {
        "description": "Informa\u00e7\u00e3o combinada de arquivos locais e SPARQL.",
        "properties": {
          "nome_arquivo_local": {
            "description": "Nome do arquivo encontrado localmente.",
            "example": "componenteA.jpg",
            "type": "string"
          },
          "presente_localmente": {
            "description": "Indica se o arquivo foi encontrado na pasta de uploads.",
            "type": "boolean"
          },
          "presente_sparql": {
            "description": "Indica se uma URI correspondente foi encontrada no SPARQL.",
            "type": "boolean"
          },
          "uri_sparql_correspondente": {
            "description": "URI da m\u00eddia no SPARQL que corresponde ao arquivo local (se houver).",
            "example": "http://example.org/media/componenteA.jpg",
            "format": "uri",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaSparqlInfo": {
        "description": "Informa\u00e7\u00e3o de m\u00eddia obtida do SPARQL.",
        "properties": {
          "media_uri": {
            "description": "URI da m\u00eddia conforme registrada no SPARQL.",
            "example": "http://example.org/media/componenteA.jpg",
            "format": "uri",
            "type": "string"
          },
          "objeto_associado_uri": {
            "description": "URI do objeto ao qual a m\u00eddia est\u00e1 associada.",
            "example": "http://localhost:3030/meu_dataset#objfisico-789-uuid-012",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "bearerFormat": "JWT",
        "description": "Token de autentica\u00e7\u00e3o JWT. Use o formato: Bearer {token}",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "API para o sistema Guar\u00e1, permitindo intera\u00e7\u00f5es com reposit\u00f3rios RDF e ontologias.",
    "termsOfService": "/tos",
    "title": "Guar\u00e1 API - Documenta\u00e7\u00e3o",
    "version": "1.0.0"
  },
  "openapi": "3.0.2",
  "paths": {
    "/acesso/add_user": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "Endere\u00e7o de email do novo curador.",
                    "example": "novo.curador@example.com",
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Senha para o novo curador.",
                    "example": "S3nh@F0rt3!",
                    "format": "password",
                    "type": "string"
                  },
                  "permissao": {
                    "description": "N\u00edvel de permiss\u00e3o (ex admin, editor, leitor).",
                    "example": "editor",
                    "type": "string"
                  },
                  "repo_name": {
                    "description": "Nome do reposit\u00f3rio ao qual este curador ser\u00e1 associado.",
                    "example": "repositorio-principal",
                    "type": "string"
                  },
                  "username": {
                    "description": "Nome de usu\u00e1rio \u00fanico para o novo curador.",
                    "example": "novo_curador",
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "permissao",
                  "email",
                  "repo_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Usu\u00e1rio adicionado com sucesso.",
                      "type": "string"
                    },
                    "user_uri": {
                      "example": "http://guara.ueg.br/ontologias/usuarios#novo_curador",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Usu\u00e1rio (curador) adicionado com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Campo 'username' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos ou campos obrigat\u00f3rios ausentes."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Usu\u00e1rio com este username j\u00e1 existe.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Usu\u00e1rio com este username ou email j\u00e1 existe."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Falha ao adicionar usu\u00e1rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno ao adicionar o usu\u00e1rio (curador)."
          }
        },
        "summary": "Adiciona um novo usu\u00e1rio (curador) ao sistema.",
        "tags": [
          "Usu\u00e1rios"
        ]
      }
    },
    "/acesso/login": {
      "post": {
        "description": "Ap\u00f3s o login, retorna o token de autentica\u00e7\u00e3o e os URIs de todos os reposit\u00f3rios associados.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "Email do usu\u00e1rio para login.",
                    "example": "usuario@dominio.com",
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Senha do usu\u00e1rio.",
                    "example": "senha123",
                    "format": "password",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "email": {
                      "example": "usuario@dominio.com",
                      "format": "email",
                      "type": "string"
                    },
                    "message": {
                      "example": "Login successful",
                      "type": "string"
                    },
                    "permissao": {
                      "description": "N\u00edvel de permiss\u00e3o do usu\u00e1rio.",
                      "example": "admin",
                      "type": "string"
                    },
                    "repositorios_associados_nomes": {
                      "description": "Lista de nomes dos reposit\u00f3rios associados ao usu\u00e1rio.",
                      "example": [
                        "repositorio-1",
                        "repositorio-2"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "token": {
                      "description": "Token de autentica\u00e7\u00e3o JWT para sess\u00f5es subsequentes.",
                      "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "format": "uuid",
                      "type": "string"
                    },
                    "user": {
                      "description": "Nome de usu\u00e1rio (username).",
                      "example": "curador_exemplo",
                      "type": "string"
                    },
                    "validade": {
                      "description": "Data e hora de expira\u00e7\u00e3o do token.",
                      "example": "2025-05-30T14:30:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Login realizado com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Campo 'email' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o mal formatada ou dados ausentes."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Usu\u00e1rio ou senha inv\u00e1lidos",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Usu\u00e1rio ou senha inv\u00e1lidos."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Falha ao conectar ao banco de dados de usu\u00e1rios.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno ao tentar realizar o login ou atualizar o token."
          }
        },
        "summary": "Realiza o login do usu\u00e1rio apenas com email e senha.",
        "tags": [
          "Autentica\u00e7\u00e3o"
        ]
      }
    },
    "/classapi/adicionar_classe": {
      "post": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Descri\u00e7\u00e3o ou coment\u00e1rio sobre a nova classe.",
                    "example": "Classe para representar ve\u00edculos que se movem em terra.",
                    "type": "string"
                  },
                  "label": {
                    "description": "R\u00f3tulo (nome leg\u00edvel) da nova classe.",
                    "example": "Ve\u00edculo Terrestre",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base da ontologia no reposit\u00f3rio (ex http://meudominio.com/ontologia#).",
                    "example": "http://example.org/ontology#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "subclassof_localname": {
                    "description": "Nome local (sem prefixo) da superclasse. A superclasse deve existir no mesmo base URI.",
                    "example": "Veiculo",
                    "type": "string"
                  }
                },
                "required": [
                  "label",
                  "comment",
                  "subclassof_localname",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "class_uri": {
                      "example": "http://example.org/ontology#VeiculoTerrestre",
                      "format": "uri",
                      "type": "string"
                    },
                    "label": {
                      "example": "Ve\u00edculo Terrestre",
                      "type": "string"
                    },
                    "message": {
                      "example": "Classe adicionada com sucesso",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Classe adicionada com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex campos obrigat\u00f3rios ausentes ou malformados)."
          },
          "500": {
            "description": "Erro interno no servidor ou falha ao executar a atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Adiciona uma nova classe a um reposit\u00f3rio SPARQL.",
        "tags": [
          "Classes"
        ]
      }
    },
    "/classapi/alterar_classe": {
      "post": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "class_uri": {
                    "description": "URI completa da classe a ser alterada.",
                    "example": "http://example.org/ontology#MinhaClasseAntiga",
                    "format": "uri",
                    "type": "string"
                  },
                  "new_comment": {
                    "description": "Nova descri\u00e7\u00e3o ou coment\u00e1rio para a classe.",
                    "example": "Esta classe foi atualizada para refletir novas defini\u00e7\u00f5es.",
                    "type": "string"
                  },
                  "new_label": {
                    "description": "Novo r\u00f3tulo (nome leg\u00edvel) para a classe.",
                    "example": "Minha Classe Atualizada",
                    "type": "string"
                  },
                  "new_subclassof_localname": {
                    "description": "Nome local (sem prefixo) da nova superclasse.",
                    "example": "OutraSuperClasse",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base da ontologia no reposit\u00f3rio.",
                    "example": "http://example.org/ontology#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "class_uri",
                  "new_label",
                  "new_comment",
                  "new_subclassof_localname",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Classe alterada com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "404": {
            "description": "Classe a ser alterada n\u00e3o encontrada."
          },
          "500": {
            "description": "Erro interno no servidor ou falha ao executar a atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Altera uma classe existente em um reposit\u00f3rio SPARQL.",
        "tags": [
          "Classes"
        ]
      }
    },
    "/classapi/excluir_classe": {
      "delete": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "class_uri_to_delete": {
                    "description": "URI completa da classe a ser exclu\u00edda.",
                    "example": "http://example.org/ontology#ClasseParaExcluir",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_query_url": {
                    "description": "URL do endpoint SPARQL de consulta (para checagens).",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "class_uri_to_delete",
                  "repository_update_url",
                  "repository_query_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Classe exclu\u00edda com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida ou a classe n\u00e3o pode ser exclu\u00edda."
          },
          "404": {
            "description": "Classe n\u00e3o encontrada para exclus\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Exclui uma classe de um reposit\u00f3rio SPARQL.",
        "tags": [
          "Classes"
        ]
      },
      "post": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "class_uri_to_delete": {
                    "description": "URI completa da classe a ser exclu\u00edda.",
                    "example": "http://example.org/ontology#ClasseParaExcluir",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_query_url": {
                    "description": "URL do endpoint SPARQL de consulta (para checagens).",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "class_uri_to_delete",
                  "repository_update_url",
                  "repository_query_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Classe exclu\u00edda com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida ou a classe n\u00e3o pode ser exclu\u00edda."
          },
          "404": {
            "description": "Classe n\u00e3o encontrada para exclus\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Exclui uma classe de um reposit\u00f3rio SPARQL.",
        "tags": [
          "Classes"
        ]
      }
    },
    "/classapi/list": {
      "get": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar as classes (usado se o m\u00e9todo for GET).",
            "example": "Pessoa",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:7200/repositories/ontologia",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Campo para ordena\u00e7\u00e3o dos resultados (ex label, class). Default 'class' (usado se o m\u00e9todo for GET).",
            "example": "label",
            "in": "query",
            "name": "orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar as classes.",
                    "example": "Animal",
                    "type": "string"
                  },
                  "orderby": {
                    "description": "Campo para ordena\u00e7\u00e3o dos resultados (ex label, class). Default 'class'.",
                    "example": "label",
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:7200/repositories/ontologia",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "repository"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de classes (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "class",
                            "label",
                            "description",
                            "subclassof"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de classes encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Expected JSON with 'repository' field",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metro 'repository' ausente ou formato incorreto)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o com o endpoint SPARQL."
          }
        },
        "summary": "Lista classes de um reposit\u00f3rio SPARQL com base em uma palavra-chave.",
        "tags": [
          "Classes"
        ]
      },
      "post": {
        "description": "(A documenta\u00e7\u00e3o do Swagger permanece a mesma)<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar as classes (usado se o m\u00e9todo for GET).",
            "example": "Pessoa",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:7200/repositories/ontologia",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Campo para ordena\u00e7\u00e3o dos resultados (ex label, class). Default 'class' (usado se o m\u00e9todo for GET).",
            "example": "label",
            "in": "query",
            "name": "orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar as classes.",
                    "example": "Animal",
                    "type": "string"
                  },
                  "orderby": {
                    "description": "Campo para ordena\u00e7\u00e3o dos resultados (ex label, class). Default 'class'.",
                    "example": "label",
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:7200/repositories/ontologia",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "repository"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de classes (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "class",
                            "label",
                            "description",
                            "subclassof"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de classes encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Expected JSON with 'repository' field",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metro 'repository' ausente ou formato incorreto)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o com o endpoint SPARQL."
          }
        },
        "summary": "Lista classes de um reposit\u00f3rio SPARQL com base em uma palavra-chave.",
        "tags": [
          "Classes"
        ]
      }
    },
    "/dim/add_relation": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "o": {
                    "description": "URI completa do objeto da rela\u00e7\u00e3o ou um Literal RDF.",
                    "example": "<http://localhost:3030/mydataset#ObjetoB>",
                    "type": "string"
                  },
                  "p": {
                    "description": "URI completa da propriedade (predicado) da rela\u00e7\u00e3o.",
                    "example": "<http://schema.org/relatedTo>",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "s": {
                    "description": "URI completa do objeto sujeito da rela\u00e7\u00e3o.",
                    "example": "<http://localhost:3030/mydataset#ObjetoA>",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "p",
                  "o",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o adicionada com sucesso",
                      "type": "string"
                    },
                    "triple": {
                      "example": "<subj> <pred> <obj> .",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o adicionada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 's' (sujeito) \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Adiciona uma rela\u00e7\u00e3o RDF entre um objeto dimensional (sujeito) e outro recurso (objeto).",
        "tags": [
          "Objetos Dimensionais",
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/dim/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "associatedMedia": {
                    "description": "Lista de URIs de m\u00eddias associadas a este objeto.",
                    "example": [
                      "http://example.org/media/foto_joao.jpg"
                    ],
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "coordenadas": {
                    "description": "Coordenadas geogr\u00e1ficas no formato 'latitude,longitude'. Aplic\u00e1vel para tipo Lugar.",
                    "example": "-16.3285,-48.9534",
                    "nullable": true,
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Descri\u00e7\u00e3o detalhada do objeto dimensional.",
                    "example": "Participou de eventos hist\u00f3ricos importantes na regi\u00e3o.",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base para os novos objetos neste reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Resumo ou breve descri\u00e7\u00e3o do objeto dimensional.",
                    "example": "Historiador e pesquisador local.",
                    "type": "string"
                  },
                  "temRelacao": {
                    "description": "Lista de URIs de outros recursos relacionados a este objeto.",
                    "example": [
                      "http://example.org/obj/EventoX",
                      "http://example.org/obj/DocumentoY"
                    ],
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "tipo_uri": {
                    "description": "URI completa do tipo do objeto dimensional (ex obj:Pessoa, obj:Lugar).",
                    "example": "http://guara.ueg.br/ontologias/v1/objetos#Pessoa",
                    "format": "uri",
                    "type": "string"
                  },
                  "titulo": {
                    "description": "T\u00edtulo ou nome principal do objeto dimensional.",
                    "example": "Jo\u00e3o Silva",
                    "type": "string"
                  }
                },
                "required": [
                  "titulo",
                  "resumo",
                  "tipo_uri",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "example": "123e4567-e89b-12d3-a456-426614174000",
                      "format": "uuid",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto dimensional adicionado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567-e89b-12d3-a456-426614174000",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto dimensional criado com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'titulo' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos (ex campos obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "example": "Detalhes do erro.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Cria um novo objeto dimensional (Pessoa, Lugar, Tempo, Evento) no reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos Dimensionais"
        ]
      }
    },
    "/dim/delete": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object_uri_to_delete": {
                    "description": "URI completa do objeto a ser exclu\u00eddo OU ID local se repository_base_uri for fornecida.",
                    "example": "http://localhost:3030/mydataset#123e4567-e89b-12d3-a456-426614174000",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base do reposit\u00f3rio, usada se 'object_uri_to_delete' for um ID local.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_delete",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto exclu\u00eddo com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567... ",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto exclu\u00eddo com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'object_uri_to_delete' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto n\u00e3o encontrado para exclus\u00e3o.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto n\u00e3o encontrado."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Exclui um objeto dimensional (ou qualquer objeto por URI) do reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos Dimensionais"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object_uri_to_delete": {
                    "description": "URI completa do objeto a ser exclu\u00eddo OU ID local se repository_base_uri for fornecida.",
                    "example": "http://localhost:3030/mydataset#123e4567-e89b-12d3-a456-426614174000",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base do reposit\u00f3rio, usada se 'object_uri_to_delete' for um ID local.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_delete",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto exclu\u00eddo com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567... ",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto exclu\u00eddo com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'object_uri_to_delete' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto n\u00e3o encontrado para exclus\u00e3o.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto n\u00e3o encontrado."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Exclui um objeto dimensional (ou qualquer objeto por URI) do reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos Dimensionais"
        ]
      }
    },
    "/dim/list": {
      "get": {
        "description": "Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar os objetos (usado se o m\u00e9todo for GET).",
            "example": "Festa",
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/query",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Tipo de objeto dimensional a ser listado (usado se o m\u00e9todo for GET, n\u00e3o usado diretamente na query get_sparq_dim).",
            "example": "Evento",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os objetos.",
                    "example": "Prociss\u00e3o",
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/query",
                    "format": "uri",
                    "type": "string"
                  },
                  "type": {
                    "description": "Tipo de objeto dimensional (informativo, pois a query get_sparq_dim j\u00e1 filtra por obj:Pessoa, obj:Tempo, etc.).",
                    "example": "Lugar",
                    "type": "string"
                  }
                },
                "required": [
                  "keyword",
                  "repository",
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de objetos dimensionais (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "obj",
                            "titulo",
                            "resumo",
                            "descricao",
                            "dimensao",
                            "lat",
                            "lon"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "obj": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://example.org/obj/Evento1",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Festa de Anivers\u00e1rio",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de objetos dimensionais encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'repository' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista objetos dimensionais de um reposit\u00f3rio SPARQL com base numa palavra-chave e tipo.",
        "tags": [
          "Objetos Dimensionais"
        ]
      },
      "post": {
        "description": "Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar os objetos (usado se o m\u00e9todo for GET).",
            "example": "Festa",
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/query",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Tipo de objeto dimensional a ser listado (usado se o m\u00e9todo for GET, n\u00e3o usado diretamente na query get_sparq_dim).",
            "example": "Evento",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os objetos.",
                    "example": "Prociss\u00e3o",
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/query",
                    "format": "uri",
                    "type": "string"
                  },
                  "type": {
                    "description": "Tipo de objeto dimensional (informativo, pois a query get_sparq_dim j\u00e1 filtra por obj:Pessoa, obj:Tempo, etc.).",
                    "example": "Lugar",
                    "type": "string"
                  }
                },
                "required": [
                  "keyword",
                  "repository",
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de objetos dimensionais (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "obj",
                            "titulo",
                            "resumo",
                            "descricao",
                            "dimensao",
                            "lat",
                            "lon"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "obj": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://example.org/obj/Evento1",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Festa de Anivers\u00e1rio",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de objetos dimensionais encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'repository' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista objetos dimensionais de um reposit\u00f3rio SPARQL com base numa palavra-chave e tipo.",
        "tags": [
          "Objetos Dimensionais"
        ]
      }
    },
    "/dim/listall": {
      "get": {
        "description": "filtrados por palavra-chave.<br/>",
        "parameters": [
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio. Obrigat\u00f3rio para GET, opcional para POST se fornecido no corpo.",
            "example": "http://localhost:3030/festas_populares/query",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Tipo de objeto para listar (quem, quando, onde, oque, fisico). Se omitido, busca em todos.",
            "example": "quem",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "quem",
                "quando",
                "onde",
                "oque",
                "fisico"
              ],
              "type": "string"
            }
          },
          {
            "description": "Palavra-chave para filtrar os resultados.",
            "example": "festa",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os resultados.",
                    "example": "documento",
                    "required": false,
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/festas_populares/query",
                    "format": "uri",
                    "type": "string"
                  },
                  "type": {
                    "description": "Tipo de objeto para listar (quem, quando, onde, oque, fisico).",
                    "enum": [
                      "quem",
                      "quando",
                      "onde",
                      "oque",
                      "fisico"
                    ],
                    "example": "fisico",
                    "required": false,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para listar objetos (usado para m\u00e9todo POST)."
        },
        "responses": {
          "200": {
            "description": "Lista de objetos encontrada com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metro 'repository' ausente)."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "summary": "Lista todos os objetos (f\u00edsicos ou dimensionais) de um tipo espec\u00edfico ou todos se nenhum tipo for especificado,",
        "tags": [
          "Objetos Dimensionais",
          "Objetos F\u00edsicos"
        ]
      },
      "post": {
        "description": "filtrados por palavra-chave.<br/>",
        "parameters": [
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio. Obrigat\u00f3rio para GET, opcional para POST se fornecido no corpo.",
            "example": "http://localhost:3030/festas_populares/query",
            "in": "query",
            "name": "repository",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Tipo de objeto para listar (quem, quando, onde, oque, fisico). Se omitido, busca em todos.",
            "example": "quem",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "quem",
                "quando",
                "onde",
                "oque",
                "fisico"
              ],
              "type": "string"
            }
          },
          {
            "description": "Palavra-chave para filtrar os resultados.",
            "example": "festa",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os resultados.",
                    "example": "documento",
                    "required": false,
                    "type": "string"
                  },
                  "repository": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/festas_populares/query",
                    "format": "uri",
                    "type": "string"
                  },
                  "type": {
                    "description": "Tipo de objeto para listar (quem, quando, onde, oque, fisico).",
                    "enum": [
                      "quem",
                      "quando",
                      "onde",
                      "oque",
                      "fisico"
                    ],
                    "example": "fisico",
                    "required": false,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para listar objetos (usado para m\u00e9todo POST)."
        },
        "responses": {
          "200": {
            "description": "Lista de objetos encontrada com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metro 'repository' ausente)."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "summary": "Lista todos os objetos (f\u00edsicos ou dimensionais) de um tipo espec\u00edfico ou todos se nenhum tipo for especificado,",
        "tags": [
          "Objetos Dimensionais",
          "Objetos F\u00edsicos"
        ]
      }
    },
    "/dim/listar_arquivos": {
      "get": {
        "parameters": [
          {
            "description": "ID do objeto para listar os arquivos.",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "in": "query",
            "name": "objetoId",
            "required": true,
            "type": "string"
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio para consulta.",
            "example": "http://localhost:3030/mydataset/sparql",
            "format": "uri",
            "in": "query",
            "name": "repositorio",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "arquivos_combinados": {
                      "description": "Lista combinada de arquivos locais com suas URIs SPARQL, se existentes.",
                      "items": {
                        "properties": {
                          "nome": {
                            "description": "Nome do arquivo.",
                            "example": "imagem1.jpg",
                            "type": "string"
                          },
                          "uri": {
                            "description": "URI associada ao arquivo via schema:associatedMedia no SPARQL.",
                            "example": "http://example.org/media/imagem1.jpg",
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "arquivos_locais": {
                      "description": "Lista de nomes de arquivos encontrados localmente na pasta do objeto.",
                      "example": [
                        "imagem1.jpg",
                        "documento.pdf"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "arquivos_sparql": {
                      "description": "Resultado da consulta SPARQL por m\u00eddias associadas.",
                      "type": "object"
                    },
                    "path_folder": {
                      "description": "Caminho absoluto no servidor para a pasta de uploads do objeto.",
                      "example": "/var/www/imagens/123e4567-e89b-12d3-a456-426614174000",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de arquivos locais e URIs SPARQL associados."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Par\u00e2metro 'objetoId' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Par\u00e2metros de entrada inv\u00e1lidos (ex objetoId ou repositorio ausente)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Exception",
                      "type": "string"
                    },
                    "message": {
                      "example": "Erro ao processar a listagem de arquivos.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno do servidor."
          }
        },
        "summary": "Lista arquivos locais e arquivos associados via SPARQL para um objeto espec\u00edfico.",
        "tags": [
          "Objetos Dimensionais",
          "M\u00eddia"
        ]
      }
    },
    "/dim/remover_relacao": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "o": {
                    "description": "URI completa ou Literal RDF do objeto da tripla (ex <http://example.org/o1> ou 'Literal').",
                    "example": "<http://example.org/pessoa/PessoaB>",
                    "type": "string"
                  },
                  "p": {
                    "description": "URI completa do predicado da tripla (ex <http://purl.org/dc/terms/relation>).",
                    "example": "<http://schema.org/knows>",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "s": {
                    "description": "URI completa do sujeito da tripla (ex <http://example.org/s1>).",
                    "example": "<http://example.org/objeto/RecursoA>",
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "p",
                  "o",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o exclu\u00edda com sucesso",
                      "type": "string"
                    },
                    "triple": {
                      "example": "<http://example.org/s1> <http://purl.org/dc/terms/title> T\u00edtulo",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o removida com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campos 's', 'p', 'o' e 'repository_update_url' s\u00e3o obrigat\u00f3rios.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove uma rela\u00e7\u00e3o RDF espec\u00edfica (tripla s-p-o) de um reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos Dimensionais",
          "Rela\u00e7\u00f5es"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "o": {
                    "description": "URI completa ou Literal RDF do objeto da tripla (ex <http://example.org/o1> ou 'Literal').",
                    "example": "<http://example.org/pessoa/PessoaB>",
                    "type": "string"
                  },
                  "p": {
                    "description": "URI completa do predicado da tripla (ex <http://purl.org/dc/terms/relation>).",
                    "example": "<http://schema.org/knows>",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "s": {
                    "description": "URI completa do sujeito da tripla (ex <http://example.org/s1>).",
                    "example": "<http://example.org/objeto/RecursoA>",
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "p",
                  "o",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o exclu\u00edda com sucesso",
                      "type": "string"
                    },
                    "triple": {
                      "example": "<http://example.org/s1> <http://purl.org/dc/terms/title> T\u00edtulo",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o removida com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campos 's', 'p', 'o' e 'repository_update_url' s\u00e3o obrigat\u00f3rios.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove uma rela\u00e7\u00e3o RDF espec\u00edfica (tripla s-p-o) de um reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos Dimensionais",
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/dim/update": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "coordenadas": {
                    "description": "Novas coordenadas 'latitude,longitude' (opcional, aplic\u00e1vel a Lugares).",
                    "example": "-16.3290,-48.9540",
                    "nullable": true,
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o detalhada (opcional).",
                    "example": "Ap\u00f3s novas pesquisas, a descri\u00e7\u00e3o foi expandida.",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto dimensional a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#123e4567-e89b-12d3-a456-426614174000",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo para o objeto.",
                    "example": "Historiador local, com foco em tradi\u00e7\u00f5es orais.",
                    "type": "string"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo para o objeto.",
                    "example": "Jo\u00e3o Silva (Revisado)",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto atualizado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567...",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto atualizado com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'object_uri_to_update' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto n\u00e3o encontrado.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza os metadados de um objeto dimensional existente.",
        "tags": [
          "Objetos Dimensionais"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "coordenadas": {
                    "description": "Novas coordenadas 'latitude,longitude' (opcional, aplic\u00e1vel a Lugares).",
                    "example": "-16.3290,-48.9540",
                    "nullable": true,
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o detalhada (opcional).",
                    "example": "Ap\u00f3s novas pesquisas, a descri\u00e7\u00e3o foi expandida.",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto dimensional a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#123e4567-e89b-12d3-a456-426614174000",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo para o objeto.",
                    "example": "Historiador local, com foco em tradi\u00e7\u00f5es orais.",
                    "type": "string"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo para o objeto.",
                    "example": "Jo\u00e3o Silva (Revisado)",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto atualizado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567...",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto atualizado com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'object_uri_to_update' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto n\u00e3o encontrado.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "SPARQL Update Error",
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza os metadados de um objeto dimensional existente.",
        "tags": [
          "Objetos Dimensionais"
        ]
      }
    },
    "/dim/update_old": {
      "post": {
        "deprecated": true,
        "description": "Considere usar o endpoint /update para uma atualiza\u00e7\u00e3o mais completa.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "descricao": {
                    "example": "Descri\u00e7\u00e3o atualizada do objeto.",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID local do objeto a ser atualizado.",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "example": "Resumo atualizado.",
                    "type": "string"
                  },
                  "titulo": {
                    "example": "T\u00edtulo Atualizado",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "descricao",
                  "titulo",
                  "resumo",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "example": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto atualizado com sucesso",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto atualizado com sucesso (vers\u00e3o antiga)."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "(Vers\u00e3o Antiga/Simplificada) Atualiza descri\u00e7\u00e3o, t\u00edtulo e resumo de um objeto.",
        "tags": [
          "Objetos Dimensionais",
          "Deprecated"
        ]
      },
      "put": {
        "deprecated": true,
        "description": "Considere usar o endpoint /update para uma atualiza\u00e7\u00e3o mais completa.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "descricao": {
                    "example": "Descri\u00e7\u00e3o atualizada do objeto.",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID local do objeto a ser atualizado.",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "example": "Resumo atualizado.",
                    "type": "string"
                  },
                  "titulo": {
                    "example": "T\u00edtulo Atualizado",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "descricao",
                  "titulo",
                  "resumo",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "example": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto atualizado com sucesso",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto atualizado com sucesso (vers\u00e3o antiga)."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "(Vers\u00e3o Antiga/Simplificada) Atualiza descri\u00e7\u00e3o, t\u00edtulo e resumo de um objeto.",
        "tags": [
          "Objetos Dimensionais",
          "Deprecated"
        ]
      }
    },
    "/fis/adicionar_relacao": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "objeto_uri_ou_literal": {
                    "description": "URI completa do recurso objeto OU um Literal RDF (ex 'Texto', '123'^^xsd:integer).",
                    "example": "<http://localhost:3030/mydataset#colecao-uuidA>",
                    "type": "string"
                  },
                  "predicado_uri": {
                    "description": "URI completa da propriedade (predicado).",
                    "example": "<http://schema.org/isPartOf>",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydat3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "sujeito_uri": {
                    "description": "URI completa do objeto f\u00edsico que \u00e9 o sujeito da rela\u00e7\u00e3o.",
                    "example": "<http://localhost:3030/mydataset#objfisico-uuid1>",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "sujeito_uri",
                  "predicado_uri",
                  "objeto_uri_ou_literal",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o adicionada com sucesso",
                      "type": "string"
                    },
                    "triple": {
                      "example": "<subj> <pred> <obj> .",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o adicionada com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Adiciona uma rela\u00e7\u00e3o RDF (tripla s-p-o) onde o sujeito \u00e9 um objeto f\u00edsico.",
        "tags": [
          "Objetos F\u00edsicos",
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/fis/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "associatedMedia": {
                    "description": "Lista de URIs de m\u00eddias associadas a este objeto.",
                    "example": [
                      "http://example.org/media/foto_cadeira.jpg"
                    ],
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "colecao_id": {
                    "description": "ID local da cole\u00e7\u00e3o \u00e0 qual este objeto f\u00edsico pertence. A URI da cole\u00e7\u00e3o ser\u00e1 montada com a repository_base_uri.",
                    "example": "colecao_arqueologia",
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Descri\u00e7\u00e3o detalhada do objeto f\u00edsico.",
                    "example": "Cadeira de madeira entalhada, s\u00e9culo XIX.",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base para os novos objetos e para referenciar tipos/cole\u00e7\u00f5es locais.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Resumo ou breve descri\u00e7\u00e3o do objeto f\u00edsico (mapeado para dc:abstract).",
                    "example": "Pe\u00e7a de mobili\u00e1rio com valor hist\u00f3rico.",
                    "type": "string"
                  },
                  "temRelacao": {
                    "description": "Lista de URIs de outros recursos relacionados a este objeto.",
                    "example": [
                      "http://example.org/obj/DocumentoRelacionado1"
                    ],
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "tipoFisicoAbreviado": {
                    "description": "Lista de nomes locais dos tipos f\u00edsicos (ex 'Movel', 'Ferramenta'). As URIs ser\u00e3o montadas com a repository_base_uri.",
                    "example": [
                      "Movel",
                      "ArtefatoHistorico"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "titulo": {
                    "description": "T\u00edtulo ou nome principal do objeto f\u00edsico.",
                    "example": "Cadeira Hist\u00f3rica",
                    "type": "string"
                  }
                },
                "required": [
                  "titulo",
                  "resumo",
                  "colecao_id",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "example": "123e4567-e89b-12d3-a456-426614174000",
                      "format": "uuid",
                      "type": "string"
                    },
                    "message": {
                      "example": "Objeto f\u00edsico adicionado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#123e4567...",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto f\u00edsico criado com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Cria um novo objeto f\u00edsico no reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      }
    },
    "/fis/delete": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object_uri_to_delete": {
                    "description": "URI completa do objeto f\u00edsico a ser exclu\u00eddo.",
                    "example": "http://localhost:3030/mydataset#objfisico-789-uuid-012",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_delete",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto f\u00edsico exclu\u00eddo com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "example": "http://localhost:3030/mydataset#objfisico-789-uuid-012",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto f\u00edsico exclu\u00eddo com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos (ex URI ausente)."
          },
          "404": {
            "description": "Objeto f\u00edsico n\u00e3o encontrado para exclus\u00e3o (se a verifica\u00e7\u00e3o for implementada)."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Exclui um objeto f\u00edsico do reposit\u00f3rio SPARQL usando sua URI completa.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      }
    },
    "/fis/list": {
      "get": {
        "description": "Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar os objetos f\u00edsicos (usado se o m\u00e9todo for GET).",
            "example": "Cadeira",
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/sparql",
            "in": "query",
            "name": "repository_sparql_endpoint",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os objetos f\u00edsicos.",
                    "example": "Mesa",
                    "type": "string"
                  },
                  "repository_sparql_endpoint": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "keyword",
                  "repository_sparql_endpoint"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de objetos f\u00edsicos (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "obj",
                            "titulo",
                            "resumo",
                            "descricao",
                            "colecao",
                            "tipos"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "obj": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://example.org/obj/Mesa123",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Mesa de Jantar Antiga",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de objetos f\u00edsicos encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'repository_sparql_endpoint' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista objetos f\u00edsicos de um reposit\u00f3rio SPARQL com base numa palavra-chave.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      },
      "post": {
        "description": "Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "Palavra-chave para filtrar os objetos f\u00edsicos (usado se o m\u00e9todo for GET).",
            "example": "Cadeira",
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/sparql",
            "in": "query",
            "name": "repository_sparql_endpoint",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "Palavra-chave para filtrar os objetos f\u00edsicos.",
                    "example": "Mesa",
                    "type": "string"
                  },
                  "repository_sparql_endpoint": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "keyword",
                  "repository_sparql_endpoint"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para busca de objetos f\u00edsicos (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "obj",
                            "titulo",
                            "resumo",
                            "descricao",
                            "colecao",
                            "tipos"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "obj": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://example.org/obj/Mesa123",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Mesa de Jantar Antiga",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de objetos f\u00edsicos encontrada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'repository_sparql_endpoint' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista objetos f\u00edsicos de um reposit\u00f3rio SPARQL com base numa palavra-chave.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      }
    },
    "/fis/listar_arquivos": {
      "get": {
        "description": "correspondentes registradas em um reposit\u00f3rio SPARQL via schema:associatedMedia.<br/>Similar ao endpoint em midiaapi, mas focado em objetos f\u00edsicos.<br/>",
        "parameters": [
          {
            "description": "ID do objeto f\u00edsico para o qual as m\u00eddias ser\u00e3o listadas.",
            "example": "objfisico-789-uuid-012",
            "in": "query",
            "name": "objetoId",
            "required": true,
            "type": "string"
          },
          {
            "description": "URL completa do endpoint SPARQL para consulta das m\u00eddias associadas.",
            "example": "http://localhost:3030/meu_dataset/sparql",
            "format": "uri",
            "in": "query",
            "name": "repositorio_sparql_endpoint",
            "required": true,
            "type": "string"
          },
          {
            "description": "URI base do reposit\u00f3rio (ex http://meudominio.com/objetos#) usada para montar a URI do objeto na consulta SPARQL.",
            "example": "http://localhost:3030/meu_dataset#",
            "format": "uri",
            "in": "query",
            "name": "repositorio_base_uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "arquivos_combinados": {
                      "items": {
                        "$ref": "#/components/schemas/ArquivoCombinadoInfo"
                      },
                      "type": "array"
                    },
                    "arquivos_locais": {
                      "example": [
                        "componenteA.jpg",
                        "manual.pdf"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "midias_associadas_sparql": {
                      "items": {
                        "$ref": "#/components/schemas/MediaSparqlInfo"
                      },
                      "type": "array"
                    },
                    "objeto_id_consultado": {
                      "example": "objfisico-789-uuid-012",
                      "type": "string"
                    },
                    "path_pasta_uploads": {
                      "example": "/var/www/imagens/objfisico-789-uuid-012",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de m\u00eddias e informa\u00e7\u00f5es retornada com sucesso."
          },
          "400": {
            "description": "Par\u00e2metros de consulta inv\u00e1lidos ou ausentes."
          },
          "404": {
            "description": "Pasta de uploads do objeto n\u00e3o encontrada."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na configura\u00e7\u00e3o/SPARQL."
          }
        },
        "summary": "Lista arquivos de m\u00eddia locais associados a um objeto f\u00edsico e suas URIs",
        "tags": [
          "Objetos F\u00edsicos",
          "M\u00eddia"
        ]
      }
    },
    "/fis/remover_relacao": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "o": {
                    "description": "URI completa ou Literal RDF do objeto da tripla (ex <http://dbpedia.org/resource/Wood> ou 'Madeira').",
                    "example": "'Madeira'",
                    "type": "string"
                  },
                  "p": {
                    "description": "URI completa do predicado da tripla (ex <http://schema.org/material>).",
                    "example": "<http://schema.org/material>",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "s": {
                    "description": "URI completa do sujeito da tripla (ex <http://example.org/obj/Mesa123>).",
                    "example": "<http://localhost:3030/mydataset#objfisico-uuid1>",
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "p",
                  "o",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o exclu\u00edda com sucesso",
                      "type": "string"
                    },
                    "triple": {
                      "example": "<subj> <pred> <obj> .",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o removida com sucesso (ou n\u00e3o existia)."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove uma rela\u00e7\u00e3o RDF espec\u00edfica (tripla s-p-o) de um objeto f\u00edsico.",
        "tags": [
          "Objetos F\u00edsicos",
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/fis/update": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "colecao_id": {
                    "description": "ID local da nova cole\u00e7\u00e3o. Se fornecido, remove a antiga e adiciona esta.",
                    "example": "colecao_restaurados",
                    "nullable": true,
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o detalhada (opcional, substitui a antiga se fornecida, remove se vazia/null).",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto f\u00edsico a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#objfisico-uuid1",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base para montar URIs de cole\u00e7\u00e3o e tipos f\u00edsicos, se IDs locais forem fornecidos.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo (dc:abstract) para o objeto f\u00edsico.",
                    "example": "Pe\u00e7a de mobili\u00e1rio do s\u00e9culo XIX, restaurada em 2023.",
                    "type": "string"
                  },
                  "tipoFisicoAbreviado": {
                    "description": "Lista de nomes locais dos novos tipos f\u00edsicos. Substitui completamente os tipos antigos.",
                    "example": [
                      "MovelRestaurado"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo para o objeto f\u00edsico.",
                    "example": "Cadeira Hist\u00f3rica Restaurada",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto f\u00edsico atualizado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto f\u00edsico atualizado com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "description": "Objeto f\u00edsico n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza um objeto f\u00edsico existente no reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "colecao_id": {
                    "description": "ID local da nova cole\u00e7\u00e3o. Se fornecido, remove a antiga e adiciona esta.",
                    "example": "colecao_restaurados",
                    "nullable": true,
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o detalhada (opcional, substitui a antiga se fornecida, remove se vazia/null).",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto f\u00edsico a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#objfisico-uuid1",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base para montar URIs de cole\u00e7\u00e3o e tipos f\u00edsicos, se IDs locais forem fornecidos.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "nullable": true,
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo (dc:abstract) para o objeto f\u00edsico.",
                    "example": "Pe\u00e7a de mobili\u00e1rio do s\u00e9culo XIX, restaurada em 2023.",
                    "type": "string"
                  },
                  "tipoFisicoAbreviado": {
                    "description": "Lista de nomes locais dos novos tipos f\u00edsicos. Substitui completamente os tipos antigos.",
                    "example": [
                      "MovelRestaurado"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo para o objeto f\u00edsico.",
                    "example": "Cadeira Hist\u00f3rica Restaurada",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Objeto f\u00edsico atualizado com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Objeto f\u00edsico atualizado com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos."
          },
          "404": {
            "description": "Objeto f\u00edsico n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza um objeto f\u00edsico existente no reposit\u00f3rio SPARQL.",
        "tags": [
          "Objetos F\u00edsicos"
        ]
      }
    },
    "/midias/list": {
      "get": {
        "description": "registradas em um reposit\u00f3rio SPARQL via schema:associatedMedia.<br/>",
        "parameters": [
          {
            "description": "ID do objeto para o qual as m\u00eddias ser\u00e3o listadas.",
            "example": "objeto123-uuid-456",
            "in": "query",
            "name": "objetoId",
            "required": true,
            "type": "string"
          },
          {
            "description": "URL completa do endpoint SPARQL do reposit\u00f3rio para consulta das m\u00eddias associadas.",
            "example": "http://localhost:3030/meu_dataset/sparql",
            "format": "uri",
            "in": "query",
            "name": "repositorio_sparql_endpoint",
            "required": true,
            "type": "string"
          },
          {
            "description": "URI base do reposit\u00f3rio (ex http://meudominio.com/objetos#) usada para montar a URI do objeto na consulta SPARQL.",
            "example": "http://localhost:3030/meu_dataset#",
            "format": "uri",
            "in": "query",
            "name": "repositorio_base_uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "arquivos_combinados": {
                      "description": "Lista consolidada de m\u00eddias, mostrando correspond\u00eancia entre arquivos locais e registros SPARQL.",
                      "items": {
                        "properties": {
                          "nome_arquivo_local": {
                            "description": "Nome do arquivo encontrado localmente.",
                            "example": "foto_evento.jpg",
                            "type": "string"
                          },
                          "presente_localmente": {
                            "description": "Indica se o arquivo foi encontrado na pasta de uploads.",
                            "type": "boolean"
                          },
                          "presente_sparql": {
                            "description": "Indica se uma URI correspondente foi encontrada no SPARQL.",
                            "type": "boolean"
                          },
                          "uri_sparql_correspondente": {
                            "description": "URI da m\u00eddia no SPARQL que corresponde ao arquivo local (se houver).",
                            "example": "http://example.org/media/foto_evento.jpg",
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "arquivos_locais": {
                      "description": "Lista de nomes de arquivos encontrados na pasta de uploads do objeto.",
                      "example": [
                        "foto_evento.jpg",
                        "video_reportagem.mp4",
                        "documento_scan.pdf"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "midias_associadas_sparql": {
                      "description": "Lista de m\u00eddias encontradas no SPARQL associadas ao objetoId.",
                      "items": {
                        "properties": {
                          "media_uri": {
                            "description": "URI da m\u00eddia conforme registrada no SPARQL.",
                            "example": "http://example.org/media/foto_evento.jpg",
                            "format": "uri",
                            "type": "string"
                          },
                          "objeto_associado_uri": {
                            "description": "URI do objeto ao qual a m\u00eddia est\u00e1 associada.",
                            "example": "http://localhost:3030/meu_dataset#objeto123-uuid-456",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "objeto_id_consultado": {
                      "example": "objeto123-uuid-456",
                      "type": "string"
                    },
                    "path_pasta_uploads": {
                      "description": "Caminho absoluto no servidor para a pasta de uploads do objeto.",
                      "example": "/var/www/imagens/objeto123-uuid-456",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de m\u00eddias locais e suas informa\u00e7\u00f5es do SPARQL retornada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Par\u00e2metro 'objetoId' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Par\u00e2metros de consulta inv\u00e1lidos ou ausentes."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string"
                    },
                    "message": {
                      "example": "Pasta de uploads para o objetoId especificado n\u00e3o encontrada.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Pasta de uploads do objeto n\u00e3o encontrada no servidor."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Server Configuration Error / RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "UPLOAD_FOLDER n\u00e3o configurado ou falha na comunica\u00e7\u00e3o SPARQL.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na configura\u00e7\u00e3o."
          }
        },
        "summary": "Lista arquivos de m\u00eddia locais associados a um objeto e suas URIs correspondentes",
        "tags": [
          "M\u00eddia",
          "Objetos Digitais"
        ]
      }
    },
    "/relation/add": {
      "post": {
        "description": "O sujeito \u00e9 identificado por um ID local e uma URI base do reposit\u00f3rio.<br/>O predicado e o objeto (se URI) devem ser URIs completas.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "literal_datatype_uri": {
                    "description": "URI do tipo de dado para o literal (ex http://www.w3.org/2001/XMLSchema#string, ...#integer, ...#boolean, ...#date).",
                    "example": "http://www.w3.org/2001/XMLSchema#string",
                    "format": "uri",
                    "nullable": true,
                    "type": "string"
                  },
                  "literal_lang_tag": {
                    "description": "Tag de idioma para o literal (ex pt, en, es).",
                    "example": "pt-BR",
                    "nullable": true,
                    "type": "string"
                  },
                  "predicado_uri": {
                    "description": "URI completa da propriedade (predicado).",
                    "example": "http://purl.org/dc/terms/title",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base do reposit\u00f3rio (ex http://meudominio.com/objetos#) para montar a URI do sujeito.",
                    "example": "http://localhost:3030/mydataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o do reposit\u00f3rio.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "sujeito_id_local": {
                    "description": "ID local do recurso sujeito (ser\u00e1 prefixado com repository_base_uri).",
                    "example": "ObjetoRecemCriado123",
                    "type": "string"
                  },
                  "tipo_valor_objeto": {
                    "description": "Indica se o 'valor_objeto' \u00e9 uma \"URI\" ou um \"Literal\".",
                    "enum": [
                      "URI",
                      "Literal"
                    ],
                    "example": "Literal",
                    "type": "string"
                  },
                  "valor_objeto": {
                    "description": "Valor da propriedade. Se tipo_valor_objeto for \"URI\", deve ser uma URI completa. Se \"Literal\", o valor literal (ex \"Meu T\u00edtulo\", \"true\", \"123\").",
                    "example": "T\u00edtulo Principal do Objeto",
                    "type": "string"
                  }
                },
                "required": [
                  "sujeito_id_local",
                  "predicado_uri",
                  "valor_objeto",
                  "tipo_valor_objeto",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o adicionada com sucesso",
                      "type": "string"
                    },
                    "sujeito_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "tripla_adicionada": {
                      "example": "<subj> <pred> <obj> .",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o (tripla) adicionada com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex campos obrigat\u00f3rios ausentes, tipo_valor_objeto inv\u00e1lido)."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Adiciona uma nova rela\u00e7\u00e3o RDF (tripla s-p-o) a um reposit\u00f3rio.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/relation/delete_all_relations": {
      "delete": {
        "description": "Use com CUIDADO, pois isso remove todas as propriedades diretas do objeto.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object_uri_to_clear": {
                    "description": "URI completa do objeto cujas rela\u00e7\u00f5es (como sujeito) ser\u00e3o removidas.",
                    "example": "http://localhost:3030/mydataset#ObjetoComMuitasPropriedades",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_clear",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00f5es do objeto como sujeito foram removidas.",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Todas as rela\u00e7\u00f5es (como sujeito) do objeto foram removidas com sucesso (ou o objeto n\u00e3o tinha rela\u00e7\u00f5es/n\u00e3o existia)."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado (se verifica\u00e7\u00e3o for implementada)."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove TODAS as triplas (rela\u00e7\u00f5es) onde um recurso espec\u00edfico \u00e9 o SUJEITO.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      },
      "post": {
        "description": "Use com CUIDADO, pois isso remove todas as propriedades diretas do objeto.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object_uri_to_clear": {
                    "description": "URI completa do objeto cujas rela\u00e7\u00f5es (como sujeito) ser\u00e3o removidas.",
                    "example": "http://localhost:3030/mydataset#ObjetoComMuitasPropriedades",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_clear",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00f5es do objeto como sujeito foram removidas.",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Todas as rela\u00e7\u00f5es (como sujeito) do objeto foram removidas com sucesso (ou o objeto n\u00e3o tinha rela\u00e7\u00f5es/n\u00e3o existia)."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado (se verifica\u00e7\u00e3o for implementada)."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove TODAS as triplas (rela\u00e7\u00f5es) onde um recurso espec\u00edfico \u00e9 o SUJEITO.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/relation/list": {
      "get": {
        "description": "Retorna as propriedades, valores, tipo do valor (URI ou Literal) e t\u00edtulo do valor (se for URI e tiver dc:title).<br/>Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "URI completa do objeto cujas rela\u00e7\u00f5es ser\u00e3o listadas (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset#Objeto123",
            "in": "query",
            "name": "id_objeto",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/sparql",
            "in": "query",
            "name": "repository_sparql_endpoint",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id_objeto": {
                    "description": "URI completa do objeto cujas rela\u00e7\u00f5es ser\u00e3o listadas.",
                    "example": "http://localhost:3030/mydataset#RecursoPrincipal",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_sparql_endpoint": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio a ser consultado.",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "id_objeto",
                  "repository_sparql_endpoint"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para listar rela\u00e7\u00f5es de um objeto (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "id",
                            "propriedade",
                            "valor",
                            "tipo_recurso",
                            "titulo"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "id": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://localhost:3030/mydataset#RecursoPrincipal",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "propriedade": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://purl.org/dc/terms/title",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "tipo_recurso": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Literal",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "nullable": true,
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "T\u00edtulo do Recurso Relacionado",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "valor": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "T\u00edtulo do Recurso",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de rela\u00e7\u00f5es (triplas) encontradas para o objeto."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'id_objeto' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista todas as rela\u00e7\u00f5es (diretas e inversas) de um objeto espec\u00edfico em um reposit\u00f3rio RDF.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      },
      "post": {
        "description": "Retorna as propriedades, valores, tipo do valor (URI ou Literal) e t\u00edtulo do valor (se for URI e tiver dc:title).<br/>Este endpoint suporta GET (com query parameters) e POST (com JSON body).<br/>A documenta\u00e7\u00e3o abaixo foca no m\u00e9todo POST. Para GET, use os mesmos par\u00e2metros como query strings.<br/>",
        "parameters": [
          {
            "description": "URI completa do objeto cujas rela\u00e7\u00f5es ser\u00e3o listadas (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset#Objeto123",
            "in": "query",
            "name": "id_objeto",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "URL do endpoint SPARQL do reposit\u00f3rio (usado se o m\u00e9todo for GET).",
            "example": "http://localhost:3030/mydataset/sparql",
            "in": "query",
            "name": "repository_sparql_endpoint",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id_objeto": {
                    "description": "URI completa do objeto cujas rela\u00e7\u00f5es ser\u00e3o listadas.",
                    "example": "http://localhost:3030/mydataset#RecursoPrincipal",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_sparql_endpoint": {
                    "description": "URL do endpoint SPARQL do reposit\u00f3rio a ser consultado.",
                    "example": "http://localhost:3030/mydataset/sparql",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "id_objeto",
                  "repository_sparql_endpoint"
                ],
                "type": "object"
              }
            }
          },
          "description": "Par\u00e2metros para listar rela\u00e7\u00f5es de um objeto (usado se o m\u00e9todo for POST).",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "id",
                            "propriedade",
                            "valor",
                            "tipo_recurso",
                            "titulo"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "id": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://localhost:3030/mydataset#RecursoPrincipal",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "propriedade": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://purl.org/dc/terms/title",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "tipo_recurso": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Literal",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "titulo": {
                                "nullable": true,
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "T\u00edtulo do Recurso Relacionado",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "valor": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "T\u00edtulo do Recurso",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de rela\u00e7\u00f5es (triplas) encontradas para o objeto."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Invalid input",
                      "type": "string"
                    },
                    "message": {
                      "example": "Campo 'id_objeto' \u00e9 obrigat\u00f3rio.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex par\u00e2metros obrigat\u00f3rios ausentes)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "RequestException",
                      "type": "string"
                    },
                    "message": {
                      "example": "Connection refused",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista todas as rela\u00e7\u00f5es (diretas e inversas) de um objeto espec\u00edfico em um reposit\u00f3rio RDF.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/relation/remover_relacao_especifica": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "o": {
                    "description": "URI completa ou Literal RDF do objeto da tripla (exemplo: <http://example.org/o1> ou \"Literal Exemplo\").",
                    "example": "\"Literal Exemplo\"",
                    "type": "string"
                  },
                  "p": {
                    "description": "URI completa do predicado da tripla (ex <http://purl.org/dc/terms/title>).",
                    "example": "<http://purl.org/dc/terms/title>",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "s": {
                    "description": "URI completa do sujeito da tripla (ex <http://example.org/s1>).",
                    "example": "<http://localhost:3030/mydataset#RecursoA>",
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "p",
                  "o",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Rela\u00e7\u00e3o espec\u00edfica exclu\u00edda com sucesso",
                      "type": "string"
                    },
                    "triple_removed": {
                      "example": "<subj> <pred> <obj> .",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rela\u00e7\u00e3o espec\u00edfica removida com sucesso (ou n\u00e3o existia)."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove uma rela\u00e7\u00e3o RDF espec\u00edfica (uma \u00fanica tripla s-p-o) de um reposit\u00f3rio SPARQL.",
        "tags": [
          "Rela\u00e7\u00f5es"
        ]
      }
    },
    "/relation/update_properties": {
      "post": {
        "description": "As propriedades antigas s\u00e3o removidas e as novas s\u00e3o inseridas.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o para o objeto (opcional).",
                    "example": "Descri\u00e7\u00e3o atualizada e mais completa do recurso.",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#MeuRecurso1",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo/assunto (dc:subject) para o objeto.",
                    "example": "Este recurso trata de aspectos revisados sobre X e Y.",
                    "type": "string"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo (dc:title) para o objeto.",
                    "example": "T\u00edtulo Revisado do Recurso",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Propriedades do objeto atualizadas com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Propriedades do objeto atualizadas com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza as propriedades dc:description, dc:title e dc:subject (resumo) de um objeto RDF.",
        "tags": [
          "Rela\u00e7\u00f5es",
          "Objetos Digitais"
        ]
      },
      "put": {
        "description": "As propriedades antigas s\u00e3o removidas e as novas s\u00e3o inseridas.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "descricao": {
                    "description": "Nova descri\u00e7\u00e3o para o objeto (opcional).",
                    "example": "Descri\u00e7\u00e3o atualizada e mais completa do recurso.",
                    "nullable": true,
                    "type": "string"
                  },
                  "object_uri_to_update": {
                    "description": "URI completa do objeto a ser atualizado.",
                    "example": "http://localhost:3030/mydataset#MeuRecurso1",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de atualiza\u00e7\u00e3o.",
                    "example": "http://localhost:3030/mydataset/update",
                    "format": "uri",
                    "type": "string"
                  },
                  "resumo": {
                    "description": "Novo resumo/assunto (dc:subject) para o objeto.",
                    "example": "Este recurso trata de aspectos revisados sobre X e Y.",
                    "type": "string"
                  },
                  "titulo": {
                    "description": "Novo t\u00edtulo (dc:title) para o objeto.",
                    "example": "T\u00edtulo Revisado do Recurso",
                    "type": "string"
                  }
                },
                "required": [
                  "object_uri_to_update",
                  "titulo",
                  "resumo",
                  "repository_update_url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Propriedades do objeto atualizadas com sucesso",
                      "type": "string"
                    },
                    "object_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Propriedades do objeto atualizadas com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida."
          },
          "404": {
            "description": "Objeto n\u00e3o encontrado para atualiza\u00e7\u00e3o."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualiza as propriedades dc:description, dc:title e dc:subject (resumo) de um objeto RDF.",
        "tags": [
          "Rela\u00e7\u00f5es",
          "Objetos Digitais"
        ]
      }
    },
    "/repositorios/adicionar_repo": {
      "post": {
        "description": "Esta opera\u00e7\u00e3o cria um recurso :RepoID rdf:type owl:Class com as propriedades fornecidas.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contato": {
                    "description": "Informa\u00e7\u00e3o de contato para o reposit\u00f3rio.",
                    "example": "contato@fotohistorica.org",
                    "format": "email",
                    "type": "string"
                  },
                  "descricao": {
                    "description": "Breve descri\u00e7\u00e3o do conte\u00fado e prop\u00f3sito do reposit\u00f3rio.",
                    "example": "Acervo digitalizado de fotografias da cidade de An\u00e1polis de 1900 a 1950.",
                    "type": "string"
                  },
                  "id_local_repo": {
                    "description": "Identificador local \u00fanico para o reposit\u00f3rio (ex 'meu_repo_principal'). Ser\u00e1 usado para formar a URI completa.",
                    "example": "meu_repo_principal",
                    "type": "string"
                  },
                  "nome": {
                    "description": "Nome leg\u00edvel do reposit\u00f3rio.",
                    "example": "Reposit\u00f3rio de Fotografias Hist\u00f3ricas da Cidade",
                    "type": "string"
                  },
                  "responsavel": {
                    "description": "Nome da institui\u00e7\u00e3o ou pessoa respons\u00e1vel pelo reposit\u00f3rio.",
                    "example": "Arquivo Hist\u00f3rico Municipal de An\u00e1polis",
                    "type": "string"
                  }
                },
                "required": [
                  "id_local_repo",
                  "nome",
                  "contato",
                  "descricao",
                  "responsavel"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id_local_repo": {
                      "example": "meu_repo_principal",
                      "type": "string"
                    },
                    "message": {
                      "example": "Defini\u00e7\u00e3o de reposit\u00f3rio adicionada com sucesso.",
                      "type": "string"
                    },
                    "repositorio_uri": {
                      "example": "http://guara.ueg.br/ontologias/v1/repositoriosamigos#meu_repo_principal",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Reposit\u00f3rio (como classe) adicionado com sucesso."
          },
          "400": {
            "description": "Dados de entrada inv\u00e1lidos ou campos obrigat\u00f3rios ausentes."
          },
          "500": {
            "description": "Erro interno no servidor ou falha na atualiza\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Adiciona uma nova defini\u00e7\u00e3o de reposit\u00f3rio ao grafo de metadados.",
        "tags": [
          "Reposit\u00f3rios"
        ]
      }
    },
    "/repositorios/create_dataset": {
      "post": {
        "description": "Este endpoint interage diretamente com a API de administra\u00e7\u00e3o do Fuseki.<br/>Requer credenciais de administrador do Fuseki configuradas no servidor da API.<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fuseki_admin_password": {
                    "description": "(Opcional no request, pego da config) Senha do admin do Fuseki.",
                    "example": "senhaSuperSecreta",
                    "format": "password",
                    "type": "string"
                  },
                  "fuseki_admin_url": {
                    "description": "(Opcional no request, pego da config) URL base do admin do Fuseki (ex http://localhost:3030).",
                    "example": "http://localhost:3030",
                    "format": "uri",
                    "type": "string"
                  },
                  "fuseki_admin_user": {
                    "description": "(Opcional no request, pego da config) Usu\u00e1rio admin do Fuseki.",
                    "example": "admin",
                    "type": "string"
                  },
                  "nome_dataset": {
                    "description": "Nome para o novo dataset a ser criado no Fuseki (ex 'meu_novo_acervo').",
                    "example": "acervo_fotografico_regional",
                    "type": "string"
                  },
                  "tipo_dataset": {
                    "default": "tdb2",
                    "description": "Tipo de armazenamento do dataset. Padr\u00e3o \u00e9 'tdb2'. Outras op\u00e7\u00f5es podem ser 'mem'.",
                    "enum": [
                      "tdb2",
                      "mem"
                    ],
                    "example": "tdb2",
                    "type": "string"
                  }
                },
                "required": [
                  "nome_dataset"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Dataset 'acervo_fotografico_regional' criado com sucesso no Fuseki.",
                      "type": "string"
                    },
                    "nome_dataset": {
                      "example": "acervo_fotografico_regional",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dataset criado com sucesso no Fuseki."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o malformada ou campo 'nome_dataset' ausente."
          },
          "401": {
            "description": "Autentica\u00e7\u00e3o falhou com o servidor Fuseki (se credenciais forem inv\u00e1lidas)."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Dataset com o mesmo nome j\u00e1 existe no Fuseki."
          },
          "500": {
            "description": "Erro interno do servidor ou falha na comunica\u00e7\u00e3o com o Fuseki."
          }
        },
        "summary": "Cria um novo dataset (TDB2 por padr\u00e3o) no servidor Apache Fuseki.",
        "tags": [
          "Reposit\u00f3rios",
          "Administra\u00e7\u00e3o Fuseki"
        ]
      }
    },
    "/repositorios/listar_repositorios": {
      "get": {
        "description": "Pode-se filtrar por um nome espec\u00edfico de reposit\u00f3rio.<br/>",
        "parameters": [
          {
            "description": "Nome exato (case-insensitive) do reposit\u00f3rio a ser filtrado. Se omitido, lista todos.",
            "example": "Meu Reposit\u00f3rio Principal",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "head": {
                      "properties": {
                        "vars": {
                          "example": [
                            "nome",
                            "uri",
                            "contato",
                            "descricao",
                            "responsavel"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "results": {
                      "properties": {
                        "bindings": {
                          "items": {
                            "properties": {
                              "nome": {
                                "properties": {
                                  "type": {
                                    "example": "literal",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "Reposit\u00f3rio 1",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "uri": {
                                "properties": {
                                  "type": {
                                    "example": "uri",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": "http://example.org/repo/Repo1",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de reposit\u00f3rios retornada com sucesso."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro na requisi\u00e7\u00e3o (ex falha ao carregar configura\u00e7\u00e3o)."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Erro interno no servidor ou falha na comunica\u00e7\u00e3o SPARQL."
          }
        },
        "summary": "Lista os reposit\u00f3rios de metadados dispon\u00edveis.",
        "tags": [
          "Reposit\u00f3rios"
        ]
      }
    },
    "/repositorios/meus_repos": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "Reposit\u00f3rios do usu\u00e1rio carregados com sucesso.",
                      "type": "string"
                    },
                    "repositorios": {
                      "description": "Detalhes dos reposit\u00f3rios aos quais o usu\u00e1rio tem acesso.",
                      "items": {
                        "properties": {
                          "contato": {
                            "example": "contato@repo.org",
                            "type": "string"
                          },
                          "descricao": {
                            "example": "Acervo principal da institui\u00e7\u00e3o.",
                            "type": "string"
                          },
                          "nome": {
                            "example": "Reposit\u00f3rio Principal",
                            "type": "string"
                          },
                          "responsavel": {
                            "example": "Institui\u00e7\u00e3o XYZ",
                            "type": "string"
                          },
                          "uri": {
                            "example": "http://localhost:3030/repositorio_principal",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lista de reposit\u00f3rios do usu\u00e1rio retornada com sucesso."
          },
          "401": {
            "description": "Token n\u00e3o fornecido ou inv\u00e1lido."
          },
          "500": {
            "description": "Erro interno no servidor ao buscar reposit\u00f3rios do usu\u00e1rio."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Lista os detalhes completos de todos os reposit\u00f3rios associados ao usu\u00e1rio logado.",
        "tags": [
          "Reposit\u00f3rios",
          "Autentica\u00e7\u00e3o"
        ]
      }
    },
    "/uploadapi/remove": {
      "post": {
        "description": "local correspondente para uma pasta de \"exclu\u00eddos\".<br/>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "media_uri_to_remove": {
                    "description": "URI completa da m\u00eddia a ser desassociada e potencialmente removida.",
                    "example": "http://localhost:3030/media/objetoAlfa123/imagem_uuid.jpg",
                    "format": "uri",
                    "type": "string"
                  },
                  "objeto_id": {
                    "description": "ID local do objeto do qual a m\u00eddia ser\u00e1 desassociada.",
                    "example": "objetoAlfa123",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base do reposit\u00f3rio para construir a URI do objeto.",
                    "example": "http://localhost:3030/meudataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de ATUALIZA\u00c7\u00c3O do reposit\u00f3rio.",
                    "example": "http://localhost:3030/meudataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "objeto_id",
                  "media_uri_to_remove",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ficheiro_movido": {
                      "example": "imagem_uuid.jpg",
                      "nullable": true,
                      "type": "string"
                    },
                    "media_uri_removida": {
                      "format": "uri",
                      "type": "string"
                    },
                    "message": {
                      "example": "Associa\u00e7\u00e3o de m\u00eddia removida e ficheiro movido para exclu\u00eddos.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Associa\u00e7\u00e3o de m\u00eddia removida e ficheiro movido (se aplic\u00e1vel) com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida (ex campos obrigat\u00f3rios ausentes)."
          },
          "401": {
            "description": "N\u00e3o autorizado."
          },
          "404": {
            "description": "Associa\u00e7\u00e3o de m\u00eddia n\u00e3o encontrada no RDF ou ficheiro local n\u00e3o encontrado."
          },
          "500": {
            "description": "Erro interno ao remover a rela\u00e7\u00e3o SPARQL ou ao mover o ficheiro."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove uma associa\u00e7\u00e3o de m\u00eddia de um objeto (schema:associatedMedia) e move o ficheiro",
        "tags": [
          "M\u00eddia",
          "Upload"
        ]
      }
    },
    "/uploadapi/upload": {
      "post": {
        "description": "As m\u00eddias s\u00e3o associadas semanticamente ao objeto usando schema:associatedMedia.<br/>",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "arquivos_midia": {
                  "contentType": "image/jpeg, image/png, video/mp4, application/pdf"
                }
              },
              "schema": {
                "properties": {
                  "arquivos_midia": {
                    "description": "Ficheiros de m\u00eddia a serem enviados.",
                    "items": {
                      "format": "binary",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "links_externos": {
                    "description": "Lista de URLs de m\u00eddias externas a serem associadas.",
                    "example": [
                      "http://example.com/video.mp4",
                      "http://images.example.com/foto.jpg"
                    ],
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "objeto_id": {
                    "description": "ID local do objeto ao qual as m\u00eddias ser\u00e3o associadas.",
                    "example": "objetoAlfa123",
                    "type": "string"
                  },
                  "repository_base_uri": {
                    "description": "URI base do reposit\u00f3rio para construir a URI do objeto (ex http://meudominio.com/objetos#).",
                    "example": "http://localhost:3030/meudataset#",
                    "format": "uri",
                    "type": "string"
                  },
                  "repository_update_url": {
                    "description": "URL do endpoint SPARQL de ATUALIZA\u00c7\u00c3O do reposit\u00f3rio.",
                    "example": "http://localhost:3030/meudataset/update",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "objeto_id",
                  "repository_update_url",
                  "repository_base_uri"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "associacoes_falha": {
                      "items": {
                        "properties": {
                          "erro": {
                            "type": "string"
                          },
                          "media_identificador": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "associacoes_sucesso": {
                      "example": [
                        "http://localhost:3030/media/objetoAlfa123/imagem_uuid.jpg"
                      ],
                      "items": {
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "example": "M\u00eddias associadas com sucesso.",
                      "type": "string"
                    },
                    "objeto_uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "M\u00eddias associadas com sucesso."
          },
          "400": {
            "description": "Requisi\u00e7\u00e3o inv\u00e1lida, incompleta ou nenhum ficheiro/link v\u00e1lido enviado."
          },
          "401": {
            "description": "N\u00e3o autorizado (token ausente ou inv\u00e1lido)."
          },
          "500": {
            "description": "Erro interno ao processar o upload, configurar pastas ou ao associar a m\u00eddia via SPARQL."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Realiza o upload de ficheiros de m\u00eddia e/ou associa links externos a um objeto existente.",
        "tags": [
          "M\u00eddia",
          "Upload"
        ]
      }
    }
  }
}
